#! /bin/sh /usr/share/dpatch/dpatch-run
## 40cjk_eastasian.dpatch by Yi-Hsuan Hsin <mhsin@mhsin.org>
##
## DP: Fix display of characters with ambiguous width depending on the
## DP: user's display locale. See upstream #16666.

@DPATCH@
diff -Naur screen-4.0.3.orig/ansi.c screen-4.0.3/ansi.c
--- screen-4.0.3.orig/ansi.c	2008-06-01 23:39:48.000000000 +0200
+++ screen-4.0.3/ansi.c	2008-06-01 23:45:01.000000000 +0200
@@ -681,7 +681,7 @@
 	      curr->w_rend.font = 0;
 	    }
 #  ifdef DW_CHARS
-	  if (curr->w_encoding == UTF8 && c >= 0x1100 && utf8_isdouble(c))
+	  if (curr->w_encoding == UTF8 && utf8_isdouble(c))
 	    curr->w_mbcs = 0xff;
 #  endif
 	  if (curr->w_encoding == UTF8 && c >= 0x0300 && utf8_iscomb(c))
diff -Naur screen-4.0.3.orig/comm.c screen-4.0.3/comm.c
--- screen-4.0.3.orig/comm.c	2008-06-01 23:45:00.000000000 +0200
+++ screen-4.0.3/comm.c	2008-06-01 23:45:01.000000000 +0200
@@ -112,6 +112,9 @@
 #endif
   { "charset",          NEED_FORE|ARGS_1 },
   { "chdir",		ARGS_01 },
+#ifdef DW_CHARS
+  { "cjkwidth",		ARGS_01 },
+#endif
   { "clear",		NEED_FORE|ARGS_0 },
   { "colon",		NEED_LAYER|ARGS_01 },
   { "command",		NEED_DISPLAY|ARGS_02 },
diff -Naur screen-4.0.3.orig/encoding.c screen-4.0.3/encoding.c
--- screen-4.0.3.orig/encoding.c	2008-06-01 23:39:49.000000000 +0200
+++ screen-4.0.3/encoding.c	2008-06-01 23:45:01.000000000 +0200
@@ -22,6 +22,7 @@
  */
 
 #include <sys/types.h>
+#include <wchar.h>
 
 #include "config.h"
 #include "screen.h"
@@ -35,6 +36,10 @@
 
 extern char *screenencodings;
 
+#ifdef DW_CHARS
+extern int cjkwidth;
+#endif
+
 static int  encmatch __P((char *, char *));
 # ifdef UTF8
 static int   recode_char __P((int, int, int));
@@ -849,18 +854,10 @@
 utf8_isdouble(c)
 int c;
 {
-  return
-    (c >= 0x1100 &&
-     (c <= 0x115f ||                    /* Hangul Jamo init. consonants */
-      (c >= 0x2e80 && c <= 0xa4cf && (c & ~0x0011) != 0x300a &&
-       c != 0x303f) ||                  /* CJK ... Yi */
-      (c >= 0xac00 && c <= 0xd7a3) || /* Hangul Syllables */
-      (c >= 0xdf00 && c <= 0xdfff) || /* dw combining sequence */
-      (c >= 0xf900 && c <= 0xfaff) || /* CJK Compatibility Ideographs */
-      (c >= 0xfe30 && c <= 0xfe6f) || /* CJK Compatibility Forms */
-      (c >= 0xff00 && c <= 0xff5f) || /* Fullwidth Forms */
-      (c >= 0xffe0 && c <= 0xffe6) ||
-      (c >= 0x20000 && c <= 0x2ffff)));
+  /* convert Unicode to UCS-4 */
+  wchar_t w = c;
+
+  return wcswidth(&w, 1) > 1;
 }
 #endif
 
diff -Naur screen-4.0.3.orig/process.c screen-4.0.3/process.c
--- screen-4.0.3.orig/process.c	2008-06-01 23:45:00.000000000 +0200
+++ screen-4.0.3/process.c	2008-06-01 23:45:01.000000000 +0200
@@ -105,6 +105,9 @@
 #ifdef UTF8
 extern char *screenencodings;
 #endif
+#ifdef DW_CHARS
+extern int cjkwidth;
+#endif
 
 static int  CheckArgNum __P((int, char **));
 static void ClearAction __P((struct action *));
@@ -4155,6 +4158,15 @@
       else
 	Msg(0, "unknown layout subcommand");
       break;
+#ifdef DW_CHARS
+    case RC_CJKWIDTH:
+      if(ParseSwitch(act, &cjkwidth) == 0)
+      {
+        if(msgok)
+          Msg(0, "Treat ambiguous width characters as %s width", cjkwidth ? "full" : "half");
+      }
+      break;
+#endif
     default:
 #ifdef HAVE_BRAILLE
       /* key == -2: input from braille keybord, msgok always 0 */
diff -Naur screen-4.0.3.orig/screen.c screen-4.0.3/screen.c
--- screen-4.0.3.orig/screen.c	2008-06-01 23:44:59.000000000 +0200
+++ screen-4.0.3/screen.c	2008-06-01 23:45:01.000000000 +0200
@@ -223,6 +223,10 @@
 char *screenencodings;
 #endif
 
+#ifdef DW_CHARS
+int cjkwidth;
+#endif
+
 #ifdef NETHACK
 int nethackflag = 0;
 #endif
@@ -470,6 +474,9 @@
   InitBuiltinTabs();
   screenencodings = SaveStr(SCREENENCODINGS);
 #endif
+#ifdef DW_CHARS
+  cjkwidth = 0;
+#endif
   nwin = nwin_undef;
   nwin_options = nwin_undef;
   strcpy(screenterm, "screen");
@@ -766,6 +773,19 @@
       debug1("environment says encoding=%d\n", nwin_options.encoding);
 #endif
     }
+# ifdef DW_CHARS
+  {
+    char *s;
+    if((s = getenv("LC_ALL")) || (s = getenv("LC_CTYPE")) ||
+       (s = getenv("LANG")))
+    {
+      if(!strncmp(s, "zh_", 3) || !strncmp(s, "ja_", 3) || !strncmp(s, "ko_", 3))
+      {
+        cjkwidth = 1;
+      }
+    }
+  }
+#endif
 #endif
   if (SockMatch && strlen(SockMatch) >= MAXSTR)
     Panic(0, "Ridiculously long socketname - try again.");
